class Solution(object):
    def isInterleave(self, s1, s2, s3):
        
        # def f(i,j,k,dp):

        #     if len(s3) == k:
        #         return len(s1) == i and len(s2) == j
        #     if dp[i][j] !=-1:
        #         return dp[i][j]
        #     if i < len(s1) and s3[k] == s1[i]:
        #         if f(i+1,j,k+1,dp):
        #             dp[i][j] = True
        #             return True
            
        #     if j < len(s2) and s3[k] == s2[j]:
        #         if f(i,j+1,k+1,dp):
        #             dp[i][j] = True
        #             return True
        #     dp[i][j] = False
        #     return False
        # dp = [[-1]*(len(s2)+1) for _ in range(len(s1)+1)]
        # return f(0,0,0,dp)

        if len(s1)+len(s2) != len(s3):
            return False
        dp = [[False]*(len(s2)+1) for _ in range(len(s1)+1)]

        dp[0][0] = True
        
        for i in range(len(s1) + 1):
            for j in range(len(s2) + 1):
                if i > 0 and s1[i - 1] == s3[i + j - 1]:
                    dp[i][j] |= dp[i - 1][j]
                if j > 0 and s2[j - 1] == s3[i + j - 1]:
                    dp[i][j] |= dp[i][j - 1]
        
        return dp[len(s1)][len(s2)]
