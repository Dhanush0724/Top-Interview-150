
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNthFromEnd(self, head, n):
        # if head is None:
        #     return None
        # cnt = 0
        # temp = head
        # while temp:
        #     cnt+=1
        #     temp = temp.next
        # if cnt == n:
        #     newhead = head.next
        #     return newhead
        # le = cnt-n-1
        # temp = head

        # for _ in range(le):
        #     temp = temp.next
        
        # delnode = temp.next
        # temp.next = temp.next.next
        # return head
        if head is None:
            return None
        
        fast = head
        slow = head

        for _ in range(n):
            fast = fast.next
        if not fast:
            return head.next
        while fast.next:
            fast = fast.next
            slow = slow.next
        
        
        slow.next = slow.next.next
        return head
