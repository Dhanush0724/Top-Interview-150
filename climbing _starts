class Solution(object):
    def climbStairs(self, n):
        
        # def f(ind):
        #     if ind == 0 or ind == 1:
        #         return 1
        #     return f(ind-1)+f(ind-2)
        # return f(n)

        # def f(ind,dp):
        #     if ind == 0 or ind == 1:
        #         return 1
        #     if dp[ind]!=-1:
        #         return dp[ind]
        #     dp[ind] =  f(ind-1,dp) + f(ind-2,dp)
        #     return dp[ind]
        # dp = [-1]*(n+1)
        # return f(n,dp)

        # dp = [-1]*(n+1)
        # dp[0] = 1
        # dp[1] = 1
        # for i in range(2,n+1):
        #     dp[i] = dp[i-1]+dp[i-2]
        # return dp[n]
        prev2 = 1
        prev = 1
        for i in range(2,n+1):
            curr = prev2+prev
            prev2 = prev
            prev = curr
        return prev

        

        
