# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def kthSmallest(self, root, k):
        """
        :type root: Optional[TreeNode]
        :type k: int
        :rtype: int
        """
        # def dfs(node,container):
        #     if not node:
        #         return 
        #     container.append(node.val)
        #     dfs(node.left,container)
        #     dfs(node.right,container)
        
        # container = []
        # dfs(root,container)
        # container.sort()
        # return container[k-1]

        def inorder(node):
            if not node:
                return None
            left = inorder(node.left)
            if left is not None:
                return left
            self.count+=1
            if self.count == k :
                return node.val
            return inorder(node.right)

        
        self.count = 0
        return inorder(root)



        


        
