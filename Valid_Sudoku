class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        # for i in range(9):
        #     s = set()
        #     for j in range(9):
        #         item = board[i][j]
        #         if item != '.':
        #             if item in s:
        #                 return False
        #             s.add(item)
        # for i in range(9):
        #     s = set()
        #     for j in range(9):
        #         item = board[j][i]
        #         if item != '.':
        #             if item in s:
        #                 return False
        #             s.add(item)
        # starts = [(0,0),(0,3),(0,6),
        #             (3,0),(3,3),(3,6),
        #             (6,0),(6,3),(6,6)]
        
        # for i,j in starts:
        #     s = set()
        #     for row in range(i,i+3):
        #         for col in range(j,j+3):
        #             item = board[row][col]
        #             if item != '.':
        #                 if item in s:
        #                     return False
        #                 s.add(item)
        # return True

        rows = [set() for _ in range(9)]
        cols = [set() for _ in range(9)]
        boxs = [set() for _ in range(9)]

        for i in range(9):
            for j in range(9):
                item = board[i][j]
                if item != '.':
                    ind = (i//3)*3 + (j//3)
                
                    if item in rows[i] or item in cols[j] or item in boxs[ind] :
                        return False
                    
                    rows[i].add(item)
                    cols[j].add(item)
                    boxs[ind].add(item)
        return True
