class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """

        # def f(n):
        #     if n >= len(nums):
        #         return 0
        #     if n == len(nums)-1:
        #         return nums[n]
        #     return max(f(n+1),nums[n]+f(n+2))
        # return f(0)

        # def f(ind,dp):
        #     if ind >= len(nums):
        #         return 0
        #     if dp[ind]!=-1:
        #         return dp[ind]
        #     dp[ind] = max(f(ind+1,dp),nums[ind]+f(ind+2,dp))
        #     return dp[ind]
        # n = len(nums)
        # dp = [-1]*n
        # return f(0,dp)

        n = len(nums)

        if n == 0:
            return 0
        elif n == 1:
            return nums[0]
        
        dp = [0]*n
        dp[0] = nums[0]
        dp[1] = max(nums[0],nums[1])

        for i in range(2,n):
            dp[i] = max(dp[i-1],nums[i]+dp[i-2])
        
        return dp[-1]
        
        
















        # if len(nums) == 0:
        #     return 0
        # elif len(nums) == 1:  
        #     return nums[0]
        
        # dp = [0] * len(nums)
        # dp[0] = nums[0]  
        # dp[1] = max(nums[0], nums[1])  

        # for i in range(2, len(nums)):
        #     dp[i] = max(dp[i-1], nums[i] + dp[i-2])
        
        # return dp[-1] 

        
