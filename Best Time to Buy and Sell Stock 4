class Solution(object):
    def maxProfit(self, k, prices):
        """
        :type k: int
        :type prices: List[int]
        :rtype: int
        """
        
        # def f(ind,buy,cap,dp):

        #     if ind == len(prices) or cap==0:
        #         return 0
        #     if dp[ind][buy][cap] != -1:
        #         return dp[ind][buy][cap]

        #     profit = 0
        #     if buy == 0:
        #         profit = max(0+f(ind+1,0,cap,dp),-prices[ind]+f(ind+1,1,cap,dp))
            
        #     elif buy == 1:
        #         profit = max(0+f(ind+1,1,cap,dp),prices[ind]+f(ind+1,0,cap-1,dp))

        #     dp[ind][buy][cap] =  profit
        #     return dp[ind][buy][cap]
        # dp = [[[-1 for _ in range(k+1)] for _ in range(2)] for _ in range(len(prices))]
        # return f(0,0,k,dp)

        dp = [[[0 for _ in range(k+1)]for _ in range(2)] for _ in range(len(prices)+1)]

        for ind in range(len(prices)-1,-1,-1):
            for buy in range(2):
                for cap in range(1,k+1):

                    
                    if buy == 0:

                        dp[ind][buy][cap] = max(0+dp[ind+1][0][cap],-prices[ind]+dp[ind+1][1][cap])
                    elif buy == 1:
                        dp[ind][buy][cap] = max(0+dp[ind+1][1][cap],prices[ind]+dp[ind+1][0][cap-1])
        return dp[0][0][cap]
