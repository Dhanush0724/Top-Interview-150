from collections import defaultdict
class Solution(object):
    def minWindow(self, s, t):
        d = defaultdict(int)
        for char in t:
            d[char]+=1
        formed = 0
        total = len(d)
        l , r = 0,0
        len_ans = float('inf')

        while r < len(s):
            char = s[r]
            if char in d:
                d[char]-=1
                if d[char] == 0:
                    formed+=1
            while l <= r and formed == total:
                curr_len = r-l+1
                if curr_len<len_ans:
                    len_ans = curr_len
                    subl = l
                    subr = r+1
                char = s[l]
                if char in d:
                    if d[char] == 0:
                        formed -= 1
                    d[char]+=1
                l+=1
            r+=1
        return "" if len_ans == float('inf') else s[subl:subr]

            

            

             
        #                  r
        # s = "ADOBECODEBANC"   t = "ABC"
        #               l
        # A - 0
        # B - 0
        # C - 0

        # formed = 3
        # total = 3

        # lenans = 7
        # subl , subr = 0 , 6
