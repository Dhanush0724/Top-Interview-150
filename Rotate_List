# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        if head is None or head.next is None or k is None:
            return head

        temp = head
        
        cnt = 1
        while temp.next:
            cnt+=1
            temp = temp.next
        
        k = k%cnt
        if k == 0:
            return head
        temp.next = head
        n = cnt-k
        curr = head
        for _ in range(n-1):
            curr = curr.next
        new_head = curr.next
        curr.next = None
        return new_head
        
        

       
        
