# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def maxPathSum(self, root):
        """
        :type root: Optional[TreeNode]
        :rtype: int
        """

        def dfs(node):
            if node is None:
                return 0
            
            left = max(0, dfs(node.left))
            right = max(0, dfs(node.right))
            maxi[0] = max(maxi[0], left + right + node.val)
            return max(left, right) + node.val
        
        maxi = [float('-inf')]  # Use a list to store the value of maxi
        dfs(root)
        return maxi[0]

        
